libname home "~/";

/***** CSV *****/
data ID1_Table;
infile '~/ID1_Table.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2;
length Num1 3.;
informat User_ID1 best32. dummy1 $3.;
input  User_ID1 dummy1 $;
Num1=_n_;
run;

data ID2_Table;
infile '~/ID2_Table.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2;
length Num2 3.;
informat User_ID2 best32. dummy2 $3.;
input  User_ID2 dummy2 $;
Num2=_n_;
run;
/********/

/***** Direct Input *****/
data ID1_Table;
infile datalines;
length Num1 3.;
Num1=_n_;
input  User_ID1 @@;
datalines;
6 2 41 76 87 57 94 96 23 38 19 16 33 13 7 19 72 97 55 32 14 96 82 3 62 25 10 9 23 88
;
run;

data ID2_Table;
infile datalines;
length Num2 3.;
Num2=_n_;
input  User_ID2 @@;
datalines;
7 19 64 24 41 40 36 25 25 42 80 33 25 91 48 100 21 87 75 4 86 17 4 71 38 32 84 33 50 14
;
run;
/********/


/*WINNER*/
proc sql;
create table ID1_ID2 as
select distinct t1.Num1,t1.User_ID1,case
	when missing(t2.User_ID2) then 0
	else 1
	end as Result
from ID1_Table as t1 left join ID2_Table as t2 on t1.User_ID1=t2.User_ID2;
quit;



/*** Other **/
proc sql;
create table ID1_ID2 as
select *
from ID1_Table as t1 left join ID2_Table as t2 on t1.User_ID1=t2.User_ID2
order by t1.Num1;
quit;

/**/
proc sql;
create table ID1_ID2xy as
select coalesce(t1.User_ID1,t2.User_ID2) as User_ID1,case
	when missing(t2.User_ID2) then 0
	else 1
	end as Result
from ID1_Table as t1 left join ID2_Table as t2 on t1.User_ID1=t2.User_ID2
order by t1.Num1;
quit;
/**/

proc sql;
create table ID1_ID2x as
select t1.User_ID1,case
	when missing(t2.User_ID2) then 0
	else 1
	end as Result
from ID1_Table as t1 left join ID2_Table as t2 on t1.User_ID1=t2.User_ID2
group by User_ID1
order by t1.Num1;
quit;

/**/
proc sql;
create table ID1_ID2x as
select t1.User_ID1,min(case when missing(t2.User_ID2) then 0 else 1 end) as Result
from ID1_Table as t1 left join ID2_Table as t2 on t1.User_ID1=t2.User_ID2
group by t1.User_ID1, Result
order by t1.Num1;
quit;
/**********/


/* Below Works in MySQL to insert var that counts obs */ /*
select @rownum:=0 from bowlers; /*must reset counter to 0 */ 
select *, @rownum:=@rownum + 1 as Num
from bowlers; */


use mydb;
create table ID1_Table(	Num1 INT NOT NULL AUTO_INCREMENT,
			User_ID1 INT NOT NULL
			PRIMARY KEY(User_ID1));
insert into ID1_Table(User_ID1) 
Values
(6),(2),(41),(76),(87),(57),(94),(96),(23),(38),(19),(16),(33),(13),(47),(19),(72),(97),(55),(32),(14),(96),(82),(3),(62),(25),(10),(9),(23),(88);


create table ID2_Table(	Num2 INT NOT NULL AUTO_INCREMENT,
			User_ID2 INT NOT NULL
			PRIMARY KEY(User_ID2));
insert into ID2_Table(User_ID2) 
Values
(7),(19),(64),(24),(41),(40),(36),(25),(25),(42),(80),(33),(25),(91),(48),(100),(21),(87),(75),(4),(86),(17),(4),(71),(38),(32),(84),(33),(50),(14);

/** Ex1 **/
select distinct Num1,User_ID1,case t2.User_ID2
	when IS NULL then 0
	else 1
	end as Result
from ID1_Table as t1 left join ID2_Table as t2
	on t1.User_ID1=t2.User_ID2;

alter table ID1_Table DROP COLUMN Num1;


/** Ex2 **/
select *, @rownum:=@rownum + 1 as Num from User_ID1;

select distinct Num,User_ID1,case t2.User_ID2
	when IS NULL then 0
	else 1
	end as Result
from ID1_Table as t1 left join ID2_Table as t2
	on t1.User_ID1=t2.User_ID2;

alter table ID1_Table DROP COLUMN Num;


/*********************/
/*** ID_Compare_v1 ***/
/*********************/

use mydb;

drop table IF EXISTS ID1_Table;
create table ID1_Table(	User_ID1 INT);
insert into ID1_Table(User_ID1) 
Values
(6),(2),(41),(76),(87),(57),(94),(96),(23),(38),(19),(16),(33),(13),(47),
(19),(72),(97),(55),(32),(14),(96),(82),(3),(62),(25),(10),(9),(23),(88);
select distinct * from ID1_Table; /* should end up with 27 obs */
alter table ID1_Table add primary key(User_ID1);

drop table IF EXISTS ID2_Table;
create table ID2_Table(	User_ID2 INT NOT NULL);
insert into ID2_Table(User_ID2) 
Values
(7),(19),(64),(24),(41),(40),(36),(25),(25),(42),(80),(33),(25),(91),(48),
(100),(21),(87),(75),(4),(86),(17),(4),(71),(38),(32),(84),(33),(50),(14);
select distinct * from ID2_Table; /* should end up with 26 obs */
alter table ID2_Table add primary key(User_ID2);

select t1.User_ID1,case
	when isnull(t2.User_ID2) then 0
	else 1
	end as Result
from ID1_Table as t1 left join ID2_Table as t2
	on t1.User_ID1=t2.User_ID2
order by User_ID1;

/*********************/
/*** ID_Compare_v2 ***/
/*********************/

use mydb;
create table /*IF NOT EXISTS*/ ID1_Table(	
			Num1 INT NOT NULL default 0,
			User_ID1 INT NOT NULL, 
            PRIMARY KEY(User_ID1));

insert ignore into ID1_Table(User_ID1) 
Values
(6),(2),(41),(76),(87),(57),(94),(96),(23),(38),(19),(16),(33),(13),(47),
(19),(72),(97),(55),(32),(14),(96),(82),(3),(62),(25),(10),(9),(23),(88);

drop table IF EXISTS ID1_Table;
create table /*IF NOT EXISTS*/ ID1_Table(	
			Num1 INT NOT NULL auto_increment,
			User_ID1 INT NOT NULL,
            PRIMARY KEY(Num1));
insert into ID1_Table(User_ID1) 
Values
(6),(2),(41),(76),(87),(57),(94),(96),(23),(38),(19),(16),(33),(13),(47),
(19),(72),(97),(55),(32),(14),(96),(82),(3),(62),(25),(10),(9),(23),(88);
select * from ID1_Table;

alter table ID1_Table drop primary key, change Num1 Num1 INT;
alter ignore table ID1_Table add primary key(User_ID1);
select * from ID1_Table;

drop table IF EXISTS ID2_Table;
create table /*IF NOT EXISTS*/ ID2_Table(	
			Num2 INT NOT NULL auto_increment,
			User_ID2 INT NOT NULL,
            PRIMARY KEY(Num2));
insert into ID2_Table(User_ID2) 
Values
(7),(19),(64),(24),(41),(40),(36),(25),(25),(42),(80),(33),(25),(91),(48),
(100),(21),(87),(75),(4),(86),(17),(4),(71),(38),(32),(84),(33),(50),(14);
select * from ID2_Table;

select distinct Num1,User_ID1,case
	when isnull(t2.User_ID2) then 0
	else 1
	end as Result
from ID1_Table as t1 left join ID2_Table as t2
	on t1.User_ID1=t2.User_ID2
order by Num1;


